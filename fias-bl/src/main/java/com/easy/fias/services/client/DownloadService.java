package com.easy.fias.services.client;


import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;
/**
 * ������ ��������� ����������
 * <p/>
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 */
@WebServiceClient(name = "DownloadService",
    targetNamespace = "http://fias.nalog.ru/WebServices/Public/DownloadService.asmx",
    wsdlLocation = "file:/com/easy/fias/services/client/fias.wsdl")
public class DownloadService
    extends Service {

  private final static URL DOWNLOADSERVICE_WSDL_LOCATION;
  private final static WebServiceException DOWNLOADSERVICE_EXCEPTION;
  private final static QName DOWNLOADSERVICE_QNAME = new QName("http://fias.nalog.ru/WebServices/Public/DownloadService.asmx", "DownloadService");

  static {
    URL url = null;
    WebServiceException e = null;
    try {
      url = new URL("http://fias.nalog.ru/WebServices/Public/DownloadService.asmx?WSDL");
    } catch (MalformedURLException ex) {
      e = new WebServiceException(ex);
    }
    DOWNLOADSERVICE_WSDL_LOCATION = url;
    DOWNLOADSERVICE_EXCEPTION = e;
  }

  public DownloadService() {
    super(__getWsdlLocation(), DOWNLOADSERVICE_QNAME);
  }

  public DownloadService(WebServiceFeature... features) {
    super(__getWsdlLocation(), DOWNLOADSERVICE_QNAME, features);
  }

  public DownloadService(URL wsdlLocation) {
    super(wsdlLocation, DOWNLOADSERVICE_QNAME);
  }

  public DownloadService(URL wsdlLocation, WebServiceFeature... features) {
    super(wsdlLocation, DOWNLOADSERVICE_QNAME, features);
  }

  public DownloadService(URL wsdlLocation, QName serviceName) {
    super(wsdlLocation, serviceName);
  }

  public DownloadService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
    super(wsdlLocation, serviceName, features);
  }

  private static URL __getWsdlLocation() {
    if (DOWNLOADSERVICE_EXCEPTION != null) {
      throw DOWNLOADSERVICE_EXCEPTION;
    }
    return DOWNLOADSERVICE_WSDL_LOCATION;
  }

  /**
   * @return returns DownloadServiceSoap
   */
  @WebEndpoint(name = "DownloadServiceSoap")
  public DownloadServiceSoap getDownloadServiceSoap() {
    return super.getPort(new QName("http://fias.nalog.ru/WebServices/Public/DownloadService.asmx", "DownloadServiceSoap"), DownloadServiceSoap.class);
  }

  /**
   * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
   * @return returns DownloadServiceSoap
   */
  @WebEndpoint(name = "DownloadServiceSoap")
  public DownloadServiceSoap getDownloadServiceSoap(WebServiceFeature... features) {
    return super.getPort(new QName("http://fias.nalog.ru/WebServices/Public/DownloadService.asmx", "DownloadServiceSoap"), DownloadServiceSoap.class, features);
  }

  /**
   * @return returns DownloadServiceSoap
   */
  @WebEndpoint(name = "DownloadServiceSoap12")
  public DownloadServiceSoap getDownloadServiceSoap12() {
    return super.getPort(new QName("http://fias.nalog.ru/WebServices/Public/DownloadService.asmx", "DownloadServiceSoap12"), DownloadServiceSoap.class);
  }

  /**
   * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
   * @return returns DownloadServiceSoap
   */
  @WebEndpoint(name = "DownloadServiceSoap12")
  public DownloadServiceSoap getDownloadServiceSoap12(WebServiceFeature... features) {
    return super.getPort(new QName("http://fias.nalog.ru/WebServices/Public/DownloadService.asmx", "DownloadServiceSoap12"), DownloadServiceSoap.class, features);
  }

}
